#!/usr/bin/ruby

#    This file is part of EC2 on Rails.
#    http://rubyforge.org/projects/ec2onrails/
#
#    Copyright 2007 Paul Dowman, http://pauldowman.com/
#
#    EC2 on Rails is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    EC2 on Rails is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#    This script allows you to ONLY execute within a shell IF the role of
#    the server (as defined by capistrano) matches the role specified.
#    ex.
#      * exec_if_in_role -role :db -exec 'echo "hello world"'
#        # will only run if the server is in the db role
#      * exec_if_in_role -role :app -exec /some/app/specific/script/to/call
#

require "rubygems"
require "optiflag"

require "fileutils"
require "#{File.dirname(__FILE__)}/../lib/roles_helper"
require "#{File.dirname(__FILE__)}/../lib/utils"

include Ec2onrails::RolesHelper

module CommandLineArgs extend OptiFlagSet
  flag "role" do
    description "The role of this server, as defined by capistrano. ex. 'db', or 'app'"
  end

  flag "exec" do
    description "what to run if the role of the server matches the -role passed in"
  end  
  
  and_process!
end

#strip out the ':', in case the user enters ':db', or ':app'
exit unless in_role?(ARGV.flags.role.sub(/^:/, '')to_sym)

Ec2onrails::Utils.rails_env
run(ARGV.flags.exec)

